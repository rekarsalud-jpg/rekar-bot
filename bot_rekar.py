import os
import json
import requests
from flask import Flask, request

app = Flask(__name__)

# ==========================
# üîê TOKENS Y VARIABLES
# ==========================
ACCESS_TOKEN = os.getenv("ACCESS_TOKEN")
BUSINESS_ID = os.getenv("BUSINESS_ID")
PHONE_NUMBER_ID = os.getenv("PHONE_NUMBER_ID")
VERIFY_TOKEN = os.getenv("VERIFY_TOKEN")

TELEGRAM_BOT_TOKEN = os.getenv("TELEGRAM_BOT_TOKEN")
TELEGRAM_CHAT_ID = os.getenv("TELEGRAM_CHAT_ID")

# ==========================
# üß† VARIABLES DE ESTADO
# ==========================
user_states = {}

# ==========================
# üì© FUNCIONES DE ENV√çO
# ==========================
def send_whatsapp_message(phone, text):
    url = f"https://graph.facebook.com/v19.0/{PHONE_NUMBER_ID}/messages"
    headers = {"Authorization": f"Bearer {ACCESS_TOKEN}", "Content-Type": "application/json"}
    payload = {
        "messaging_product": "whatsapp",
        "to": phone,
        "type": "text",
        "text": {"body": text}
    }
    requests.post(url, headers=headers, json=payload)

def send_telegram_message(text):
    url = f"https://api.telegram.org/bot{TELEGRAM_BOT_TOKEN}/sendMessage"
    payload = {"chat_id": TELEGRAM_CHAT_ID, "text": text}
    requests.post(url, json=payload)

# ==========================
# üí¨ MEN√ö PRINCIPAL
# ==========================
def main_menu():
    return (
        "Seleccion√° una opci√≥n:\n\n"
        "1Ô∏è‚É£ Enviar tu CV a rekar.salud@gmail.com\n"
        "2Ô∏è‚É£ Requisitos para trabajar en REKAR\n"
        "3Ô∏è‚É£ Ingresar a nuestra web\n"
        "4Ô∏è‚É£ Formulario para base de datos\n"
        "5Ô∏è‚É£ Informaci√≥n sobre REKAR\n"
        "6Ô∏è‚É£ Hablar con un representante humano"
    )

# ==========================
# ü§ñ L√ìGICA DEL BOT
# ==========================
@app.route("/webhook", methods=["POST"])
def webhook():
    data = request.get_json()
    if "entry" in data:
        try:
            message = data["entry"][0]["changes"][0]["value"]["messages"][0]
            phone = message["from"]
            text = message["text"]["body"].strip().lower()

            # --- Registro nuevo contacto ---
            if phone not in user_states:
                user_states[phone] = "asking_name"
                send_whatsapp_message(phone, "üëã Hola! Soy *RekyBot*, asistente virtual de *REKAR Salud*.\n\nAtendemos de *lunes a s√°bado de 9 a 19 hs*.\n¬øC√≥mo te llam√°s?")
                send_telegram_message(f"üìû Nuevo contacto: {phone}")
                return "ok", 200

            # --- Pide nombre ---
            if user_states[phone] == "asking_name":
                user_states[phone] = "menu"
                send_telegram_message(f"üë§ Registrado: {text.title()} ({phone})")
                send_whatsapp_message(phone, f"Gracias {text.title()} üôå\n\n{main_menu()}")
                return "ok", 200

            # --- En men√∫ ---
            if user_states[phone] == "menu":
                if text in ["1", "1Ô∏è‚É£"]:
                    send_whatsapp_message(phone, "üìß Pod√©s enviar tu CV a *rekar.salud@gmail.com*")
                elif text in ["2", "2Ô∏è‚É£"]:
                    send_whatsapp_message(phone, "üìã Requisitos:\n- Kinesi√≥logo/a o Lic. en Enfermer√≠a con matr√≠cula provincial y nacional.\n- Monotributista activo.\n- Seguro de mala praxis vigente.")
                elif text in ["3", "3Ô∏è‚É£"]:
                    send_whatsapp_message(phone, "üåê Pod√©s ingresar a nuestra web aqu√≠: LINK_AQUI_WEB")
                elif text in ["4", "4Ô∏è‚É£"]:
                    send_whatsapp_message(phone, "üìù Ingres√° a nuestro formulario aqu√≠: LINK_AQUI_FORMULARIO")
                elif text in ["5", "5Ô∏è‚É£"]:
                    send_whatsapp_message(phone,
                        "üè• Somos *REKAR*, una red de enfermer√≠a y kinesiolog√≠a domiciliaria.\n"
                        "Conectamos pacientes con profesionales calificados.\n"
                        "Trabajamos en Zona Sur y Oeste.\n"
                        "Capacitamos a los profesionales y ofrecemos sueldos competitivos para garantizar calidad en la atenci√≥n."
                    )
                elif text in ["6", "6Ô∏è‚É£"]:
                    send_whatsapp_message(phone, "‚òéÔ∏è Gracias por comunicarte. Un representante humano te contactar√° pronto.")
                    send_telegram_message(f"üìû {phone} solicita hablar con un representante.")
                else:
                    send_whatsapp_message(phone, "‚ö†Ô∏è No entend√≠ tu respuesta.\n\n" + main_menu())
                    return "ok", 200

                send_whatsapp_message(phone, "¬øQuer√©s volver al men√∫ principal o salir?\nEscrib√≠ *men√∫* o *salir*.")
                user_states[phone] = "after_action"
                return "ok", 200

            # --- Despu√©s de acci√≥n ---
            if user_states[phone] == "after_action":
                if "men√∫" in text or "menu" in text:
                    send_whatsapp_message(phone, main_menu())
                    user_states[phone] = "menu"
                elif "salir" in text:
                    send_whatsapp_message(phone, "üëã ¬°Gracias por comunicarte con *REKAR Salud*! Hasta pronto.")
                    del user_states[phone]
                else:
                    send_whatsapp_message(phone, "‚ö†Ô∏è No entend√≠. Escrib√≠ *men√∫* o *salir*.")
                return "ok", 200

        except Exception as e:
            print("Error:", e)
    return "ok", 200

# ==========================
# üîÑ RESPUESTA DESDE TELEGRAM
# ==========================
@app.route("/telegram", methods=["POST"])
def telegram():
    data = request.get_json()
    if "message" in data:
        msg = data["message"]
        text = msg.get("text", "")
        if text.startswith("/responder"):
            try:
                parts = text.split(" ", 2)
                phone = parts[1]
                reply = parts[2]
                send_whatsapp_message(phone, reply)
                send_telegram_message(f"‚úÖ Respuesta enviada a {phone}")
            except Exception:
                send_telegram_message("‚ö†Ô∏è Formato incorrecto. Usa:\n/responder NUMERO mensaje")
    return "ok", 200

# ==========================
# üßæ VERIFICACI√ìN WEBHOOK
# ==========================
@app.route("/webhook", methods=["GET"])
def verify():
    if request.args.get("hub.verify_token") == VERIFY_TOKEN:
        return request.args.get("hub.challenge")
    return "Verificaci√≥n fallida", 403

# ==========================
# üöÄ INICIO
# ==========================
if __name__ == "__main__":
    port = int(os.getenv("PORT", 10000))
    app.run(host="0.0.0.0", port=port, debug=False)
